# Copyright 2005-2017 ECMWF.
#
# This software is licensed under the terms of the Apache Licence Version 2.0
# which can be obtained at http://www.apache.org/licenses/LICENSE-2.0.
# 
# In applying this licence, ECMWF does not waive the privileges and immunities granted to it by
# virtue of its status as an intergovernmental organisation nor does it submit to any jurisdiction.
#

# Definition 41 - The European Flood Awareness System

# isFillup can be 0, 1 or missing
# When it is 0, it means "Water Balance"
unsigned[1] isFillup = missing() : dump, can_be_missing;
alias local.isFillup = isFillup;

# Forecase Reference Date and Time
unsigned[2] yearOfForecast   = year   : dump;
unsigned[1] monthOfForecast  = month  : dump;
unsigned[1] dayOfForecast    = day    : dump;
unsigned[1] hourOfForecast   = hour   : dump;
unsigned[1] minuteOfForecast = minute : dump;
constant    secondsOfForecast = 0;
meta dateOfForecast  g2date(yearOfForecast,monthOfForecast, dayOfForecast) : dump;
meta timeOfForecast  time  (hourOfForecast,minuteOfForecast,secondsOfForecast) : dump;

# Calculate the Julian number for the forecast date and time.
# This will be a floating point number with units of 'day'
meta julianForecastDay julian_day(dateOfForecast,hourOfForecast,minuteOfForecast,secondsOfForecast): hidden;
# Calculate the difference between the forecast date and reference date
transient diffInDays = (julianForecastDay - julianDay) : hidden;   # float

# Now convert this to hours. First convert to minutes then round up
transient diffInHours = (diffInDays * 1440 + 0.5)/60 : hidden;
meta anoffset round(diffInHours, 10): dump;
alias local.anoffset = anoffset;

# Boolean
transient is_efas = 1;

# Note: the key typeOfPostProcessing is in the PDTNs 70, 71, 72 and 73
concept efas_post_proc {
  "unknown"           = { typeOfPostProcessing=0  ; }
  "lisflood"          = { typeOfPostProcessing=1  ; }
  "lisflood_eric"     = { typeOfPostProcessing=2  ; }
  "lisflood_season"   = { typeOfPostProcessing=3  ; }
  "lisflood_merged"   = { typeOfPostProcessing=4  ; }
  "ericha"            = { typeOfPostProcessing=51 ; }
  "htessel_lisflood"  = { typeOfPostProcessing=101; }
  "htessel_eric"      = { typeOfPostProcessing=102; }
  "htessel_camaflood" = { typeOfPostProcessing=103; }
  "epic"              = { typeOfPostProcessing=152; }
  "unknown"           = { dummy = 1; }
} : hidden;

# Note: the key inputOriginatingCentre is in the PDTNs 70, 71, 72 and 73
concept efas_forecast {
  "griddedobs" = { inputOriginatingCentre=98; marsType = "an"; }
  # "reanalysis" = { inputOriginatingCentre=98; marsType = "an"; }

  "hres" = { inputOriginatingCentre=98; marsType = "fc"; } # deterministic
  "ens"  = { inputOriginatingCentre=98; marsType = "pf"; } # ensemble
  "ens"  = { inputOriginatingCentre=98; marsType = "cf"; } # ensemble

  "global"  = { inputOriginatingCentre=78; inputProcessIdentifier = 1; }
  "lam"     = { inputOriginatingCentre=78; inputProcessIdentifier = 2; }
  
  "unknown" = { dummy = 1; }
} : hidden;
